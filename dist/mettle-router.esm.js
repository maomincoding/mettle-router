/*!
 * Mettle-router v0.2.0
 * (c) 2021-2025 maomincoding
 * Released under the MIT License.
 */
const t="0.2.0",n={path:"",isMounted:!1,_template:null};function e(t,e){return"function"==typeof e&&window.addEventListener("hashchange",(()=>{n.path=h(),n.isMounted=!1;const r=o(n.path,t);e(r)}),!1),{view:function(){if(n.path)return o(n.path,t);if(location.hash){const e=h();return n.isMounted,o(e,t)}return"/index.html"===location.pathname?o("/",t):o(location.pathname,t)}}}function o(t,e){for(let o=0;o<e.length;o++){const r=e[o];if(r.path===t){if(n.isMounted)return n._template();const t=r.template;return n.isMounted=!0,n._template=t,n._template()}}}function r(t){var e;"string"==typeof t||"object"===(e=t,Object.prototype.toString.call(e).match(/\[object (.+?)\]/)[1].toLowerCase())?"string"==typeof t?(window.location.href=`${p()}#${t}`,n.path=t):t.path&&"string"==typeof t.path?(t.query?window.location.href=`${p()}#${t.path}?${function(t){const n=[];for(let e in t)n.push(`${e}=${s(t[e])}`);return n.join("&")}(t.query)}`:window.location.href=`${p()}#${t.path}`,n.path=t.path):console.error("[mettle-router error]: the first parameter of function linkTo should have a param called path with string when it is an ordinary object"):console.error("[mettle-router error]: the first parameter of function linkTo should be a string or a object")}function i(t){window.history.go(t)}function a(){window.history.go(-1)}function c(){window.history.go(1)}function l(){const t=decodeURIComponent(location.href.split("?")[1]).replace(/\+/g," ");if(!t)return{};const n={};return t.split("&").forEach((t=>{const e=t.indexOf("=");if(-1!==e){const o=t.substring(0,e),r=t.substring(e+1,t.length);n[o]=r}})),n}function s(t){return t=(t=(t=(t=(t=(t=(t=(t=(t+="").replace(/%/g,"%25")).replace(/\+/g,"%2B")).replace(/ /g,"%20")).replace(/\//g,"%2F")).replace(/\?/g,"%3F")).replace(/&/g,"%26")).replace(/\=/g,"%3D")).replace(/#/g,"%23")}function h(){return-1!==location.hash.indexOf("?")?location.hash.split("#")[1].split("?")[0]:location.hash.split("#")[1]}function p(){const t=window.location.href,n=t.indexOf("#");return`${n>=0?t.slice(0,n):t}`}export{a as back,c as forward,i as go,e as initRouter,r as linkTo,t as routerVersion,l as toParse};
